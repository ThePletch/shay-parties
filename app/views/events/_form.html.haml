.card.mx-md-5
  .card-header.text-center.text-bg-secondary= t('event.form.preview_label')
  .hero
    .hero-image
      %small.form-text#crop-instruction= t('event.form.header_photo_crop_prompt')
      %img#photo-preview{src: event.photo.attached? ? url_for(event.photo) : image_path('default_event_image.jpg'), data: {initial_y_offset: event.photo_crop_y_offset}}
    .mx-2
      .hero-title
        %h1.title.display-4#title-preview{data: {default: t('event.title_placeholder')}}
        %em.text-muted.mb-2
          = t('event.show.hosted_by_you')
  .mx-1.alert.alert-danger.text-center.emojified-warning#requires-testing
    %strong= t('event.show.requires_testing')
  .card-footer.text-center.text-bg-secondary= t('event.form.preview_label')
%hr
= bootstrap_form_for(event, url: event.persisted? ? event_path(event) : events_path) do |form|
  - if event.errors.any?
    #error_explanation
      %h2= t('event.form.errors_msg')
  = form.text_field :title, floating: true
  = form.form_group(class: 'row') do
    .col-md-6
      .row
        .col-md-5
          = form.text_field :start_time, class: 'datetimepicker', value: event.start_time_str, floating: true
        .col-md-2.align-items-center.d-flex.text-center
          %em.col= "…#{t('event.show.time_separator')}…"
        .col-md-5
          = form.text_field :end_time, class: 'datetimepicker', value: event.end_time_str, floating: true
    .col-md-6
      = form.form_group do
        = form.check_box :secret, label: t('event.form.labels.secret'), label_class: 'btn btn-outline-dark', class: 'marked-checkbox btn-check', wrapper_class: 'd-inline-block'
        = render "shared/info_tooltip", message: t('event.form.secret_event_help')

        = form.check_box :requires_testing, label: t('event.form.labels.covid_testing'), label_class: 'btn btn-outline-dark', class: 'marked-checkbox btn-check', wrapper_class: 'd-inline-block'
        = render "shared/info_tooltip", message: t('event.form.testing_help')
  .form-group
    = form.hidden_field :photo_crop_y_offset
    = form.file_field :photo, direct_upload: true, help: t('event.form.header_photo_help')
    %strong.form-text#crop-prompt= t('event.form.header_photo_crop_prompt')
  = form.hidden_field :address_id, id: 'existing_address_id'
  = render "addresses/form", parent_form: form
  .form-group
    = form.text_area :description, class: 'form-control', style: "height: 10em;", floating: true, help: t('event.form.description_uses_markdown_html', link: link_to(t('event.form.description_uses_markdown_name'), 'https://www.markdownguide.org/basic-syntax/'))
  .form-group.mb-2
    %h3 Polls
    #polls
      = form.fields_for(:polls, layout: :inline) do |f|
        = render partial: "polls/form", locals: {f: f}
    = link_to_add_fields t('event.form.add_poll'), form, :polls, {partial: 'polls/form', target: "#polls", locals: { poll: form.object.polls.build }, layout: :inline, child_index: 'added_poll'}, class: 'btn btn-success', id: "add-poll"
  .actions
    = form.primary
